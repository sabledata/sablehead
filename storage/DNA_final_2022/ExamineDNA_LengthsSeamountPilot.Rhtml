<html>

<head>
<title>Title</title>
</head>

<body>

<p>DNA 2022</p>

<!--begin.rcode

  library(ggplot2)
  library(dplyr)
  library(kableExtra)

  path       <- 'C:/github/sablehead/storage/DNA_final_2022/'
  options(scipen = 999)                         # not displayed in scientific notation
  
  GetSQLData <- function(strSQL,strDbName) {    # connect to SQL Server
     library(RODBC)
        cnn  <- odbcDriverConnect(paste("Driver={SQL Server};Server=DFBCV9TWVASP001;", 
                                       "Database=",strDbName,";Trusted_Connection=Yes",sep=""))
        dat  <- sqlQuery(cnn, strSQL)
                odbcClose(cnn)
                return(dat) 
  }
  
  
  DNA.fisher22 <- paste("select DNA_VIAL_BARCODE, Sex_as_determined_by_fisher_M_F, ",
                      "Genetic_sex_ID, Concordance_fisher_and_genetic_sex_ID, ",
                      "(InterOrbital_DistanceA + InterOrbital_DistanceB + ",
                      "InterOrbital_DistanceC) / 3 AS AverageID ",
                      "from  dbo.Head_DNA_Seamount_Pilot_Results", sep="")
  #DNA.fisher.2022  <- GetSQLData(DNA.fisher22,"Sablefish") 
  #write.table(DNA.fisher.2022, file = paste(path,"DNAfisher2022.csv",sep=''),
  #           row.names=FALSE,na="",col.names=TRUE, sep=',')
  DNA.fisher.2022  <- read.csv(paste(path,'DNAfisher2022.csv', sep=''), header=T)
  
  names(DNA.fisher.2022) <- c("DNAvial","fisher_sex","DNALab_sex","concordance","averageInterODistance")   
  DNA.fisher.2022  <-  DNA.fisher.2022[DNA.fisher.2022$DNALab_sex != 'Unknown',]
  #tail(DNA.fisher.2022)

end.rcode-->

<p>Box plot:</p>

<!--begin.rcode fig.width=7, fig.height=6


# Basic box plot

# summary statistics 2 ways to find mean...
# 1. 
DNA.melt.agg <- aggregate(averageInterODistance ~ concordance , data=DNA.fisher.2022, mean)
names(DNA.melt.agg) <- c("concordance", "AverageID")
#2.
summary_df <- DNA.fisher.2022 %>% group_by(concordance) %>% summarize(m=mean(averageInterODistance))
summary_n  <- DNA.fisher.2022 %>% group_by(concordance) %>% summarize(n=length(averageInterODistance))
summary_nMF <- DNA.fisher.2022 %>% group_by(concordance,fisher_sex) %>% summarize(n=length(averageInterODistance))

p <- ggplot(DNA.fisher.2022, aes(as.factor(concordance), averageInterODistance)) +
            geom_boxplot() + theme_classic() + 
            stat_summary(fun="mean",color="purple") 

p <- p + geom_text(data=summary_df,
    aes(y=m-0.6, label=round(m,1)),
    color='purple', position=position_dodge(0.2)   )

p

print(summary_nMF)
  
end.rcode-->

<!--begin.rcode fig.width=7, fig.height=6

min(DNA.fisher.2022$averageInterODistance)
max(DNA.fisher.2022$averageInterODistance)

  DNA.fisher.table <- DNA.fisher.2022 %>%
       mutate(Len.Group = case_when(averageInterODistance >= 35 & averageInterODistance < 37 ~"35-36",
       averageInterODistance >= 37 & averageInterODistance < 39~ "37-38",
       averageInterODistance >= 39 & averageInterODistance < 41~ "39-40",       
       averageInterODistance >= 41 & averageInterODistance < 43~ "41-42",
       averageInterODistance >= 43 & averageInterODistance < 45~ "43-44",       
       averageInterODistance >= 45 & averageInterODistance < 47~ "45-46",
       averageInterODistance >= 47 & averageInterODistance < 49~ "47-48",
       averageInterODistance >= 49 & averageInterODistance < 51~ "49-50",
       averageInterODistance >= 51 & averageInterODistance < 53~ "51-52", 
       averageInterODistance >= 53 & averageInterODistance < 55~ "53-54",
       averageInterODistance >= 55 & averageInterODistance < 57~ "55-56",
       averageInterODistance >= 57 & averageInterODistance < 59~ "57-58", 
       averageInterODistance >= 59 & averageInterODistance < 61~ "59-60",        
       averageInterODistance >= 61 & averageInterODistance < 63~ "61-62"))

   agg.dna <- DNA.fisher.table %>% group_by(concordance, Len.Group) %>% 
               summarise( cnt = length(averageInterODistance))
   
   agg.dna$top <- "NA"
   a<-agg.dna[agg.dna$concordance==0,]
   b<-agg.dna[agg.dna$concordance==1,]
   
   a$top[c(which.max(a$cnt))]  <-  "X" 
   b$top[c(which.max(b$cnt))]  <-  "X" 
   names(a) <- c("concordance","x","y","top")
   names(b) <- c("concordance","x","y","top")
   

   
   library(ggplot2)
   library(dplyr)
   path            <-  "c:/github/sablehead/storage/DNA_final_2022/"
   for (i in 1: length(a$x)) {# create sparkline graphs
        h<- a$x[i]
        p<-ggplot(a, aes(x=x, y=y)) +
         geom_segment( aes(x=x, xend=x, y=0, yend=y)) +
         geom_point( size=5, color=ifelse(a$x %in% c(h,a$x[i]), "red", "yellow" ), 
                     fill=alpha("orange", 0.3), 
                     alpha=0.7, shape=21, stroke=2) + theme_bw()
        #p
        
         #ggsave(p, filename = paste0(path,"xfig", i ,".png"), 
        #          width = 7, height = 1.9)  # mini graphs
        
   }
   
    for (i in 1: length(b$x)) {# create sparkline graphs
        h<- b$x[i]
        p<-ggplot(b, aes(x=x, y=y)) +
         geom_segment( aes(x=x, xend=x, y=0, yend=y)) +
         geom_point( size=5, color=ifelse(b$x %in% c(h,b$x[i]), "red", "blue" ), 
                     fill=alpha("light blue", 0.3), 
                     alpha=0.7, shape=21, stroke=2) + theme_bw()
        #p
        
         #ggsave(p, filename = paste0(path,"x2fig", i ,".png"), 
         #           width = 7, height = 1.9)  # mini graphs
        
        }
   
    a  <- a %>%
          mutate(Sparkline = 
                paste0("\\raisebox{.12\\height} {\\includegraphics[width=2cm]{",path,"xfig",i,".png}}"  ) ) 
    
    b  <- b%>%
          mutate(Sparkline = 
                paste0("\\raisebox{.12\\height} {\\includegraphics[width=2cm]{",path,"x2fig",i,".png}}"    ) ) 
    
    a1 <-  a[, c(2, 1, 3, 5)]
    b1 <-  b[, c(2, 1, 3, 5)] 
    agg.new <- rbind(a1,b1)
    names(agg.new) <-  c("Head Length group", "Concordane", "Count", "Graph")
    
    kableExtra::kable(agg.new,
                     booktabs = TRUE,     
                     escape = F,        # lets the image show up 
                     linesep   = "",
                     align=rep('r', 18),
                     row.names = FALSE,   # in order to get rid of matrix counter
                     format = "html") 
      
   

 
  
end.rcode-->

</body>
</html>
