The estimated slope is `r lmslp(lm(Fork_Length ~ Upper_jaw_length, data=hdUj))` (SE `r coef(summary(lm(Fork_Length ~ Upper_jaw_length, data=hdUj)))[,"Std. Error"][2]`) units of fork length 
per unit of upper jaw length; the estimated slope is `r lmslp(lm(Fork_Length ~ Eye_Diameter, data=hdEd))` (SE `r  coef(summary(lm(Fork_Length ~ Eye_Diameter, data=hdEd)))[, "Std. Error"][2]`) 
units of fork length per unit of eye diameter; the estimated slope is `r lmslp(lm(Fork_Length ~ InterOrbital_Distance, data=hdId))` 
(SE `r coef(summary(lm(Fork_Length ~ InterOrbital_Distance, data=hdId)))[, "Std. Error"][2]`) units of fork length per unit of interorbital distance; 
the estimated slope is `r lmslp(lm(Fork_Length ~ Snout_length, data=hdSl))` (SE `r coef(summary(lm(Fork_Length ~ Snout_length, data=hdSl)))[, "Std. Error"][2]` 
units of fork length per unit of snout length; the estimated slope is `r lmslp(lm(Fork_Length ~ Postorbital_Preoperculum, data=hdPop))` 
(SE `r coef(summary(lm(Fork_Length ~ Postorbital_Preoperculum, data=hdPop)))[, "Std. Error"][2]`) units of fork length per unit of postorbital to preoperculum length; 
and the estimated slope is `r lmslp(lm(Fork_Length ~ Post_orbital_Head_length, data=hdPo))` 
(SE `r coef(summary(lm(Fork_Length ~ Post_orbital_Head_length, data=hdPo)))[, "Std. Error"][2]`) units of fork length per unit of postorbital head length.


    hd                     <-  hdPo                     # table of sample size, mean and sd for Post orbital (PH) variable
    n                      <-  length(hd$SPECIMEN_ID)                   
    mn                     <-  round(mean(hd$Post_orbital_Head_length),2)
    mnfl                   <-  round(mean(hd$Fork_Length),2)
    std                    <-  round(sd(hd$Post_orbital_Head_length),2)
    stdfl                  <-  round(sd(hd$Fork_Length),2)
  
    head.data[6,]     <- c("Post orbital head length (PO)",n,mn, std, fl.nme, mnfl, stdfl)
    names(head.data)  <- c("Predictor variable", "n", "mean", "sd", "Response variable", "mean", "sd")

ref:figure7) Scatterplot of post orbital length vs fork length.

```{r figure7, fig.cap='(ref:figure7)', results='asis',echo=FALSE, dpi=500, out.width = "400px", out.height ="290px", fig.align = "center"}

     png("C:/github/sablehead/figures/figure7.png", units="px", width=1600, height=1200, res=300) # write png to file

     #  fit the regression line and get the results
     hd                     <-  hdPo                                        # post orbital length data
     n                      <-  length(hd$SPECIMEN_ID)                      # number of specimens 
     hd.fit.outliers        <-  lm(Fork_Length ~ Post_orbital_Head_length, data=hd) # linear regression model 
     #plot(hd.fit.outliers, which = 1, pch=21)   # plot(hd$Post_orbital_Head_length,hd$Fork_Length)  # abline(hd.fit.outliers)
     hd.fit.outliersummary  <-  summary(hd.fit.outliers)                    # summary

     hd$predicted       <- predict(hd.fit.outliers)       #   save the predicted values
     hd$residuals       <- residuals(hd.fit.outliers)     #   save the residual values
     o                  <- abs(residuals(hd.fit.outliers)) > 100
     h                  <- hd[o,]
     h$indx             <- as.integer(rownames(h))       # create label values considered outliers
     h$lbdist           <- sign(h$residuals) * 20
     
     ggplot(hd, aes(x = Post_orbital_Head_length, y = Fork_Length)) +
            ylab('Fork length (mm)') +
            xlab("Postorbital head length (mm)") + 
            geom_smooth(method = "lm", se = FALSE, color = "grey") +                #   plot regression slope
            geom_segment(aes(xend = Post_orbital_Head_length, yend = predicted), alpha = .5) +  # alpha to fade lines
            geom_point(aes(color = residuals), size=1) +                          #   plot residuals
            #scale_color_gradient2(low = "#d19c2f", mid = "#1ebecd", high = "purple") +  
                   scale_color_gradient2(low = "light grey", mid = "grey", high = "black") +
            geom_point(aes(y = predicted), shape = 21, size=1) +                 #   plot predicted white circles
            geom_text(data=h,
                      x = h$Post_orbital_Head_length, y = h$Fork_Length + h$lbdist, 
                      label = h$indx, size=3.0) +   # label outliers
            geom_text(x = 75, y = 1100, 
                      label = lm_eqn(hd, hd$Fork_Length, hd$Post_orbital_Head_length, n), 
                      parse = TRUE, size=4.2)  # y = mx + b label    
                      
       
     while (!is.null(dev.list()))  dev.off()
     img <-   paste('C:/github/sablehead/figures/figure7.png',sep="")   # -- retrieve png 
              knitr::include_graphics(img)
              
```
 